<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-autowire="byName">
	
    <context:property-placeholder location="classpath:config.properties"/>
	
	<context:component-scan base-package="com.winxuan" />
	
	<import resource="classpath:mail.xml"/>
	
	   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver">
        </property>
        <property name="url" value="${mysql.url}"></property>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
		 <property name="maxActive" value="10000" /> 
         <property name="maxIdle" value="30" /> 
         <property name="minIdle" value="2" /> 
         <property name="maxWait" value="600000" /> 
         <property name="testOnBorrow" value="true"/> 
         <property name="testWhileIdle" value="true"/> 
     <property name="validationQuery" value="select 1 from dual"/> 
    </bean> 
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
       <property name="dataSource" ref="dataSource" />  
       <property name="hibernateProperties">
           <props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.query.factory_class">org.hibernate.hql.ast.ASTQueryTranslatorFactory</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				
			</props>
       </property>
        <property name="packagesToScan">
       <list>
            <value>com.winxuan.ec.model.*</value>
        </list>
      </property>    
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"/>
    
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    
    <bean id="hibernateLazyResolver" class="com.winxuan.framework.util.hibernate.HibernateLazyResolver"/>
    <bean class="com.winxuan.framework.dynamicdao.AutoInjectDynamicDaoBeanPostProcessor"/>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"/>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="utf-8" p:maxUploadSize="100000"/> 
</beans>