seajs.use(["jQuery", "areaSelector", "validator", "checkPwd"], function($, area, validator, CheckPwd){    area.init(23, -1, -1, -1, -1);    validator($);    var areaConstant = area.defaultconstant;    	$.getJSON("http://www.winxuan.com/ipaddress?format=json&t="+new Date().getTime(),function(data){		if(!!data){			var province = $(areaConstant.province), city = $(areaConstant.city),country=$(areaConstant.country);			country.find("option").each(function(){				var el=$(this);				if(el.text()==data.country){					country.val(el.val());					country.trigger("change");				}			});			if(data.province.length>0){				setTimeout(function(){					province.find("option").each(function(){						var el=$(this);						if(el.text()==data.province){							province.val(el.val());							province.trigger("change");						}					});				},300);				if(data.city.length>0){					setTimeout(function(){						city.find("option").each(function(){							var el=$(this);							if(el.text()==data.city){								city.val(el.val());                                city.trigger("change");							}						});					},600);				}			}		}	});    $('<div id="cart-message"></div><div id="order-overlay" class="overlay" style="display:none"></div>').appendTo(document.body);    $("#cart-message").ajaxSend(function(){        $(this).html("<div class='loading'>\u66f4\u65b0\u4e2d...</div>").css({            "top": ($(window).height() / 2 + $(document).scrollTop())        }).fadeIn("slow");    }).ajaxSuccess(function(){        $(this).html("<div class='success'>\u66f4\u65b0\u6210\u529f.</div>");    }).ajaxError(function(){        $(this).html("<div class='error'>\u66f4\u65b0\u5931\u8d25.</div>");    }).ajaxComplete(function(){        var el = this;        setTimeout(function(){            $(el).fadeOut("slow");        }, 2000);    });    var shopId = $("input[name='shopId'][type='hidden']").val(), supplyTypeId = $("input[name='supplyTypeId'][type='hidden']").val(), advanceAccount = {        isUsed: false    }, present = {        el: null,        size: 5,        page: 1,        template: '<div class="widgets-window present" id="presentWindow" style="display:none;"><div class="widgets-title"><span>\u793c\u5238</span><a href="javascript:;" bind="close">X</a></div><div class="widgets-content"></div></div>',        formHtml: '<div class="present-form"><p><label for="present">\u6fc0\u6d3b\u65b0\u7684\u793c\u5238:</label><input type="text" name="present" class="text"/><button>\u6fc0\u6d3b</button>&nbsp;<a href="http://www.winxuan.com/customer/present" target="present">\u7ba1\u7406\u6211\u7684\u793c\u5238</a></p></div><hr/>',        buttonHtml: '<hr/><div class="button-wrap"><button>\u786e\u8ba4</button></div>',        show: function(el){            if (el.checked) {                this.isUsed = true;                if (!this.el) {                    $(this.template).appendTo(document.body);                    this.el = $("#presentWindow");                    this.init();                }                this.locate();                this.selectEl = $(el);                this.showTip();            }            else {                this.isUsed = false;                this.removeTip();            }        },        init: function(){            this.el.find(".widgets-title a").live("click", function(){                present.close();            });            this.el.find(".present-form button").live("click", function(){                present.submit();            });            this.el.find(".button-wrap button").live("click", function(){                present.close();            });            this.el.find("div.page a").live("click", function(){                present.goToPage(this);            });            this.el.find("input[name='choose_present']").live("click", function(){                present.choose(this);            });            this.overlay = $("div.widgets-overlay");            if (this.overlay.length == 0) {                $('<div class="widgets-overlay"></div>').appendTo(document.body);                this.overlay = $("div.widgets-overlay");            }            this.title = this.el.find("div.widgets-title");            this.content = this.el.find("div.widgets-content");            this.load();        },        choose: function(el){            var value = $(el).val();            this.id = value;        },        load: function(){            this.title.find("span").html("\u6b63\u5728\u52a0\u8f7d\u793c\u5238");            this.content.html("<div class='widgets-loading'><p>\u6b63\u5728\u52a0\u8f7d\u793c\u5238\u5217\u8868\uff0c\u8bf7\u7a0d\u5019...</p></div>");            $.getJSON("/customer/present/checkout", {                format: "json",                t: new Date().getTime(),                shopId: shopId,                supplyTypeId: supplyTypeId            }, function(data){                if(data.channel == 6){                    present.formHtml="<p>\u4F60\u5DF2\u4EAB\u53D7\u5176\u4ED6\u4F18\u60E0\uFF0C\u6682\u4E0D\u53EF\u4EE5\u6FC0\u6D3B\u65B0\u7684\u793C\u5238\u3002</p>";                }                if (data.result == 1 && data.presents) {                    present.render(data.presents);                }                else {                    present.render([], {});                }            });        },        render: function(presents){            this.data = presents;            this.selectedPage = this.getSelectedPage(presents);            this.pageCount = this.getPageCount(presents.length);            var pagePresents = this.getPresentsInPage(presents, this.selectedPage);            if ((!!pagePresents) && pagePresents.length > 0) {                this.pagination(pagePresents);            }            else {                this.title.find("span").html("\u4f7f\u7528\u65b0\u7684\u793c\u5238");                this.content.html(this.formHtml);            }            this.titleHtml = this.title.html();            this.contentHtml = this.content.html();            this.locate();        },        pagination: function(presents){            var html = [this.formHtml];            html.push('<div class="present-list"><table><tr><th class="select">&nbsp;</th><th>\u7f16\u53f7</th><th>\u9762\u503c</th><th>\u6709\u6548\u622a\u81f3\u65e5\u671f</th><th>\u8bf4\u660e</th></tr>');            $.each(presents, function(){                html.push("<tr>");                var isChecked = (this.id == present.id ? " checked='checked'" : "");                html.push("<td><input type='radio' name='choose_present'" + isChecked + " value='" + this.id + "'/></td>");                html.push("<td>" + this.id + "</td>");                html.push("<td>" + this.value + "</td>");                html.push("<td>" + (this.endDate.split(" ")[0]) + "</td>");                html.push("<td>" + this.batch.productTypeName + "\u7c7b\u6ee1" + this.batch.orderBaseAmount + "\u5143\u4f7f\u7528");                if (!this.batch.ploy) {                    html.push("\uff0c\u4e0d\u53c2\u52a0\u4fc3\u9500\u6d3b\u52a8");                }                html.push("</td>");                html.push("</tr>");            });            html.push("</table></div>");            this.fillPage(html);            html.push(this.buttonHtml);            this.title.find("span").html("\u8bf7\u9009\u62e9\u60a8\u7684\u793c\u5238");            this.content.html(html.join(""));        },        fillPage: function(html){            if ((!this.pageCount) || this.pageCount <= 1) {                return;            }            html.push("<div class='page'><ul>");            for (var i = 1; i <= this.pageCount; i++) {                if (this.selectedPage == i) {                    html.push("<li>" + i + "</li>");                }                else {                    html.push("<li><a href='javascript:;'>" + i + "</a></li>");                }            }            html.push("</ul></div>");        },        goToPage: function(el){            var page = $(el).html();            this.selectedPage = page;            this.pagination(this.getPresentsInPage(this.data, page));            this.locate();        },        getPresentsInPage: function(presents, pageNO){            var start = this.size * (pageNO - 1), end;            if ((start + this.size) > presents.length) {                end = presents.length;            }            else {                end = start + this.size            }            return presents.slice(start, end);        },        getPageCount: function(count){            if (!count || count == 0) {                return 0;            }            var size = this.size;            if (count % size != 0) {                return parseInt(count / size) + 1;            }            else {                return count / size;            }        },        getSelectedPage: function(presents){            var index = 0;            $.each(presents, function(i){                if (this.id == present.id) {                    index = i + 1;                    return false;                }            });            if (index != 0) {                return this.getPageCount(index);            }            return 1;        },        reset: function(){            this.title.html(this.titleHtml);            this.content.html(this.contentHtml);        },        submit: function(){            var code = this.el.find("input[name='present']").val();            if (code.length > 0) {                this.title.find("span").html("\u6b63\u5728\u9a8c\u8bc1\u793c\u5238");                this.content.find("div.present-form").html("<div class='widgets-loading'>\u6b63\u5728\u9a8c\u8bc1\u793c\u5238\uff0c\u8bf7\u7a0d\u5019...</div>");                $.getJSON("/customer/present/active", {                    code: code,                    format: "json",                    t: new Date().getTime()                }, function(data){                    if (data.result == "0") {                        present.content.find("div.present-form").html("<div class='widgets-result'>\u60a8\u8f93\u5165\u793c\u5238\u6709\u8bef\uff0c\u70b9\u51fb<a href='javascript:;' bind='reset'>\u91cd\u65b0\u8f93\u5165</a></div>");                        present.content.find("a[bind='reset']").click(function(){                            present.reset();                        });                        present.code = null;                    }                    else {                        present.id = data.present.id;                        present.data.push(data.present);                        present.load();                    }                });            }        },        close: function(){            this.overlay.hide();            this.el.hide();            if (!this.id) {                this.selectEl.removeAttr("checked");                this.isUsed = false;                this.removeTip();            }            else {                this.showTip();            }        },        removeTip: function(){            var tipEl = this.selectEl.parent().find("span");            tipEl.remove();        },        getPresent: function(){            var result = null, id = this.id;            $.each(this.data, function(){                if (this.id == id) {                    result = this;                    return false;                }            });            return result;        },        showTip: function(el){            var el = el || this.selectEl, tipEl = el.parent().find("span"), message = null;            if (!!this.isUsed && !!this.id) {                var present = this.getPresent();                message = "[\u793c\u5238\u53f7\uff1a" + present.id + ",\u9762\u503c\uff1a\uffe5" + present.value.toFixed(2) + "]";                if (tipEl.length == 0) {                    $("<span class='tip'>" + message + "</span>").appendTo(el.parent());                }                else {                    tipEl.html(message);                }            }        },        locate: function(){            this.el.css({                top: $(window).height() / 2 + $(document).scrollTop() - this.el.height() / 2,                display: "block"            });            this.overlay.css({                height: $(document).height(),                width: $(window).width(),                display: "block"            });        }    }, presentCard = {        el: null,        cards: [],        list: [],        template: '<div class="widgets-window present-card" id="presentCard"><div class="widgets-title"><span>\u6211\u7684\u793c\u54c1\u5361</span><a href="javascript:;" bind="close">X</a></div><div class="widgets-content"></div></div>',        formHtml: '<form action="javascript:;"><p><label for="no">\u5361\u53f7</label><input type="text" name="number"/><label for="password">\u5bc6\u7801</label><input type="password" name="password"/><button>\u4f7f\u7528</button></p></form>',        buttonHtml: '<hr/><div class="button-wrap"><button>\u786e\u8ba4</button></div>',        show: function(el){            this.reference = $(el);            if (el.checked) {                this.isUsed = true;                if (!this.el) {                    $(this.template).appendTo(document.body);                    this.el = $("#presentCard");                    this.init();                }                this.locate();            }            else {                this.isUsed = false;                this.hideTip();            }        },        init: function(){            this.el.find("div.widgets-title a").live('click', function(){                presentCard.close();            });            this.el.find("div.button-wrap button").live('click', function(){                presentCard.close();            });            this.el.find("form button").live('click', function(){                presentCard.save();            });            this.el.find("table input[name='presentCard']").live('click', function(){                presentCard.choose(this);            });            this.overlay = $("div.widgets-overlay");            if (this.overlay.length == 0) {                $('<div class="widgets-overlay"></div>').appendTo(document.body);                this.overlay = $("div.widgets-overlay");            }            this.title = this.el.find("div.widgets-title");            this.content = this.el.find("div.widgets-content");            this.load();        },        load: function(){            this.content.html("<div><p>\u6b63\u5728\u52a0\u8f7d\u4e2d...</p></div>");            $.getJSON("/customer/presentcard/checkout", {                format: "json",                t: new Date().getTime()            }, function(data){                if (data.result == 1) {                    presentCard.render(data.presentCards);                }                else {                    presentCard.render([]);                }            });        },        render: function(cards){            this.content.html("");            $(this.formHtml + '<div class="cards-list"></div>').appendTo(this.content);            if (cards.length > 0) {                var html = ['<table><tr><th>&nbsp;</th><th>\u5361\u53f7</th><th>\u4f59\u6b3e</th><th>\u6709\u6548\u671f</th></tr>'];                $.each(cards, function(){                    html.push("<tr>");                    html.push("<td><input type='checkbox' name='presentCard' value='" + this.id + "'/></td>");                    html.push("<td>" + this.id + "</td>");                    html.push("<td>" + this.balance + "</td>");                    html.push("<td>" + this.endDate + "</td>");                    html.push("</tr>");                });                html.push('</table>');                $(html.join("")).appendTo(this.content.find("div.cards-list"));            }            else {                $("<div class='tip'><p>\u63d0\u793a:\u60a8\u8fd8\u672a\u7ed1\u5b9a\u4efb\u4f55\u793c\u54c1\u5361,\u60a8\u53ef\u4ee5\u5728\u4e0a\u65b9\u8f93\u5165\u5361\u53f7\u548c\u5bc6\u7801\u76f4\u63a5\u4f7f\u7528</p></div>").appendTo(this.content.find(".cards-list"));            }            $(this.buttonHtml).appendTo(this.content);            this.locate();        },        locate: function(){            this.el.css({                top: $(window).height() / 2 + $(document).scrollTop() - this.el.height() / 2,                display: "block"            });            this.overlay.css({                height: $(document).height(),                width: $(window).width(),                display: "block"            });        },        showTip: function(el){            var el = el || this.reference, tipEl = el.parent().find("span"), message = [];            if (this.isUsed && this.cards.length > 0) {                $.each(this.cards, function(){                    message.push("\u793c\u54c1\u5361\uff1a" + this.id);                });                if (tipEl.length == 0) {                    $("<span class='tip'>[" + message.join(";") + "]</span>").appendTo(el.parent());                }                else {                    tipEl.html("[" + message.join(";") + "]");                }            }        },        hideTip: function(){            var tipEl = this.reference.parent().find("span");            tipEl.remove();        },        close: function(){            this.overlay.hide();            this.el.hide();            if (this.cards.length == 0) {                this.reference.removeAttr("checked");                this.hideTip();                this.isUsed = false;            }            else {                this.showTip();            }        },        add: function(card){            var template = ["<tr><td><input type='checkbox' name='presentCard' value='" + card.id + "' checked='checked' password='" + card.password + "'/>"];            template.push("</td><td>" + card.id + "</td>");            template.push("<td>" + card.balance + "</td>");            template.push("<td>" + card.endDate + "</td>");            template.push("</tr>");            if (this.el.find("table").length == 0) {                var list = this.content.find("div.cards-list");                list.html("");                $('<hr/><table><tr><th>&nbsp;</th><th>\u5361\u53f7</th><th>\u4f59\u6b3e</th><th>\u6709\u6548\u671f</th></tr></table>').appendTo(list);                $(template.join("")).appendTo(this.el.find("table"));            }            else {                $(template.join("")).insertBefore(this.el.find("table tr:eq(1)"));            }            this.cards.push({                id: card.id,                password: card.password            });        },        save: function(){            var number = this.el.find("form input[name='number']"), password = this.el.find("form input[name='password']");            if (number.val().length > 0 && password.val().length > 0) {                if (!this.isExist(number.val())) {                    this.el.find(":input").attr("disabled", "disabled");                    this.removeError();                    $.ajax({                        type: "POST",                        url: "/customer/presentcard/use",                        data: {                            card: number.val(),                            password: password.val(),                            format: "json"                        },                        success: function(data){                            if (data.result == 1) {                                data.presentCard.password = password.val();                                presentCard.add(data.presentCard);                                number.val("");                                password.val("");                            }                            else {                                presentCard.showError("\u793c\u54c1\u5361\u5361\u53f7\u6216\u5bc6\u7801\u9519\u8bef");                            }                        },                        complete: function(){                            presentCard.el.find(":input").removeAttr("disabled")                        },                        dataType: "json"                    });                }                else {                    this.el.find("form input").val("");                    this.showError("\u793c\u54c1\u5361\u5df2\u5b58\u5728\u8bf7\u5728\u4e0b\u65b9\u9009\u62e9");                }            }        },        showError: function(msg){            var errEl = this.el.find(".error-msg");            if (errEl.length == 0) {                $("<div class='error-msg'></div>").appendTo(this.el.find("form"));                errEl = this.el.find(".error-msg");            }            errEl.html(msg);        },        removeError: function(){            this.el.find(".error-msg").remove();        },        isExist: function(number){            var result = false, el = $("input[name='presentCard'][value='" + number + "']");            if (el.length > 0) {                el.attr("checked", "checked");                result = true;            }            return result;        },        isContained: function(id){            var result = false;            $.each(presentCard.cards, function(){                if (this.id == id) {                    result = true;                }                return false;            });            return result;        },        put: function(id, password){            if (!this.isContained(id)) {                presentCard.cards.push({                    id: id,                    password: (password || "")                });            }        },        remove: function(number){            var idx = null;            $.each(presentCard.cards, function(i){                if (this.id == number) {                    idx = i;                    return false;                }            });            if (idx != null) {                presentCard.cards.splice(idx, 1);            }        },        choose: function(el){            if (el.checked) {                this.put($(el).val(), $(el).attr("password"));            }            else {                this.remove($(el).val());            }        }    }, consignee = {        el: $("div[step='consignee']"),        getValues: function(){            return {                consignee: this.form.find("input[name='consignee']").val(),                country: this.form.find("select[areaLevel='country'] option:selected").html(),                province: this.form.find("select[areaLevel='province'] option:selected").html(),                city: this.form.find("select[areaLevel='city'] option:selected").html(),                district: this.form.find("select[areaLevel='district'] option:selected").html(),                address: this.form.find("input[name='address']").val(),                zipCode: this.form.find("input[name='zipCode']").val(),                mobile: this.form.find("input[name='mobile']").val(),                phone: this.form.find("input[name='phone']").val()            };        },		getAnonymPassword:function(){			 var mobile = this.form.find("input[name='mobile']").val(), phone = this.form.find("input[name='phone']").val();			 if(mobile&&mobile.length>0){			 	return mobile.substring(mobile.length-6);			 }			 if(phone&&phone.length>0){			 	var reg=/^((0\d{2,3})-)(\d{7,8})(-(\d{3,}))?$/,					result=phone.match(reg);				if(!!result){					var no=result[3];					return no.substring(no.length-6);				}			 }		},        save: function(){            var email = this.el.find("input[name='email']").val(), obj = this;            obj.button.attr("disabled", "disabled");            if (!obj.logined) {				if(this.validate()){					$.ajax({	                    url: "/anonym/active",	                    data: {	                        "format": "json",	                        "email": email,							"password":this.getAnonymPassword(),							"name":this.form.find("input[name='consignee']").val(),							"mobile":this.form.find("input[name='mobile']").val(),	                        "t": new Date().getTime()	                    },	                    global: false,	                    success: function(data){	                        if (data.result == "0") {	                            consignee.showEmailFormatError();	                            return;	                        }	                        if (data.result == "2") {	                            consignee.showEmailExist();	                            return;	                        }	                        obj.logined = true;	                        consignee.saveAddress();	                    }	                });				}            }            else {                consignee.saveAddress();            }        },        saveAddress: function(){            var data = this.form.serialize();            if (this.validate()) {                this.areaId = this.form.find("select[areaLevel='town'] option:selected").val();                this.items.attr("disabled", "disabled");                this.button.parent().toggleClass("processing");                var url = consignee.form.attr("ajaxurl") + "?format=json" + ((!!shopId) ? "&shopId=" + shopId : "") + "&supplyTypeId=" + supplyTypeId;                if (consignee.update) {                    url += "&_method=put";                }                $.ajax({                    "type": consignee.form.attr("method"),                    "data": data,                    "url": url,                    "success": function(data){                        consignee.items.removeAttr("disabled");                        consignee.button.parent().toggleClass("processing");                        if (data.result == "1") {                            consignee.id = data.address.id;                            if (consignee.update) {                                consignee.el.find("input[name='addressItem'][value='" + data.address.id + "']").attr("area", consignee.areaId);                            }                            consignee.next();                        }                        else {                            consignee.showMessage({                                type: "error",                                message: data.message                            });                        }                    },                    "error": function(xhr, s, e){                        throw new Error(e);                    },                    "dataType": "JSON"                });            }        },        validate: function(){            var mobile = this.form.find("input[name='mobile']").val(), phone = this.form.find("input[name='phone']").val();            if (mobile || phone) {                return true;            }            this.showMessage("<label class='error'>\u8bf7\u586b\u5199\u6536\u8d27\u4eba\u7684\u624b\u673a\u53f7\u7801\u6216\u8005\u56fa\u5b9a\u7535\u8bdd\u53f7\u7801</label>");            return false;        },        hideMessage: function(msg){            consignee.form.find(".form-message").hide();        },        showMessage: function(msg){            var m = this.form.find(".form-message");            m.html(msg);            m.show();        },        view: function(){            var obj = this.getValues(), arr = [];            for (var name in obj) {                if (!!obj[name])                     arr.push(obj[name]);            }			var tip=this.el.find(".form-info p.reg-tip"),				email=this.el.find("input[name='email']"),				password=this.getAnonymPassword();			email.attr("readonly","readonly").addClass("readonly");            this.el.find(".form-info p.new").html("<input type='radio' name='address' value='" + consignee.areaId + "' checked='checked'/><span>" + arr.join(",") + "</span>&nbsp;&nbsp;<a href='javascript:;' bind='modifyConsignee' style='display:none'>[\u4fee\u6539]</a>");			tip.html(tip.html().replace(/{email}/,email.val()).replace(/{password}/,password));	            this.el.find("#anonym-info").show();            this.el.find("a[bind='modifyConsignee']").click(consignee.edit);            this.el.removeClass("new edit").addClass("view");        },        next: function(){            if (!!this.areaId) {                var url = "/deliveryinfo/area/" + this.areaId;                $.get(url, "format=json" + ((!!shopId) ? "&shopId=" + shopId : "") + "&supplyTypeId=" + supplyTypeId+"&t="+new Date().getTime(), function(data){                    var html = ' <table class="delivery_mode" width="100%" border="0" cellspacing="2" cellpadding="0">';                    html += ' <tr><th width="50%">\u9001\u8d27\u65b9\u5f0f</th><th>\u8FD0\u8D39</th></tr>';                    $.each(data.deliveryInfo, function(i){                        if (i == 0) {                            html += '<tr id="delivery' + this.id + '"><td><input name="deliveryType" type="radio" typeId="' + this.deliveryType.id + '" value="' + this.id + '"> <span value="' + this.id + '">' + this.deliveryType.name + delivery.support.yes + '</span></td><td>' + (delivery.expense[this.deliveryType.id] || "") + '</td></tr>';                        }                        else {                            html += '<tr id="delivery' + this.id + '"><td><input name="deliveryType" type="radio" typeId="' + this.deliveryType.id + '" value="' + this.id + '"> <span value="' + this.id + '">' + this.deliveryType.name + delivery.support.no + '</span></td><td>' + (delivery.expense[this.deliveryType.id] || "") + '</td></tr>';                        }                    });                    html += '<tr><td><input name="delivery_btn" type="button" class="confirm_but" value="\u786e\u8ba4\u9001\u8d27\u65b9\u5f0f"></td><td>&nbsp;</td></tr>';                    html += '</table>';                    delivery.el.find("div.deliveryTable").html(html);                    delivery.el.find("input[name='deliveryType']").click(function(){                        var el = $(this);                        if (el.attr("typeId") == "3" && el.attr("checked") && !el.attr("loaded")) {                            var html = "<div class='deliveryOption'>";                            html += "<label name='selectlabel'>\u9001\u8D27\u4E0A\u95E8\u65F6\u95F4\uFF1A</label>";                            html += "<select name='deliveryoption'><option value='3436'>\u65F6\u95F4\u4E0D\u9650</option>";                            html += "<option value='3434'>\u5DE5\u4F5C\u65E5\u0028\u5468\u4E00\u81F3\u5468\u4E94\u0029</option>";                            html += "<option value='3435'>\u5468\u672B\u8282\u5047\u65E5</option></select>";                            html += "</div>";                            el.parent().append(html);                            el.attr("loaded", "loaded");                        }                        if (el.attr("checked") && el.attr("typeId") == "3") {                            delivery.el.find("div.info_bg").find("div.deliveryOption").hide();                            //el.parent().find("div.deliveryOption").show();                        }                        else {                            delivery.el.find("div.info_bg").find("div.deliveryOption").hide();                        }                    });                    delivery.init();                    delivery.el.removeClass("step view").addClass("new");                    consignee.view();                }, "JSON");                order.hideHightlight();            }        },        edit: function(e){            consignee.el.removeClass("step view").addClass("edit");            consignee.el.find("form input[name='id']").val(consignee.id);            consignee.el.find("#anonym-info").hide();            consignee.update = true;            e.preventDefault();        },        init: function(){            this.form = this.el.find("form");            this.items = this.form.find(":input");            this.button = this.form.find("button");            this.form.attr("ajaxurl", this.form.attr("action"));            this.form.attr("action", "javascript:void(0)");            this.form.validate({                submitHandler: function(form){                    consignee.save();                    return false;                }            });            this.form.find("input.email").bind("blur", function(){                consignee.emailCheck(this);            });            var obj = this;            this.form.delegate("a.pop", "click", function(e){                obj.showLoginWindow();                e.preventDefault();            });			this.el.delegate("select[name='province.id']","change",consignee.changeFormat);			this.el.delegate("select[name='country.id']","change",consignee.removeFormat);        },		removeFormat:function(){			var zipCode=consignee.el.find("input[name='zipCode']"),				mobile=consignee.el.find("input[name='mobile']"),				phone=consignee.el.find("input[name='phone']");				zipCode.removeAttr("format");				mobile.removeAttr("format");				phone.removeAttr("format");		},		changeFormat:function(){			var value=$(this).val(),				zipCode=consignee.el.find("input[name='zipCode']"),				mobile=consignee.el.find("input[name='mobile']"),				phone=consignee.el.find("input[name='phone']");			if(value=="176"){				zipCode.attr("format","^([1-9]{1})((\\d{2})|(\\d{4}))$");				mobile.attr("format","^0?9[0-9]{8}$");				phone.attr("format","^((0\\d{1,2})-)(\\d{6,8})(-(\\d{3,}))?$");			}else{				zipCode.removeAttr("format");				mobile.removeAttr("format");				phone.removeAttr("format");			}		},        showLoginWindow: function(cfg){            var obj = this;            if ((!obj.componentLoaded) && (!obj.login)) {                seajs.use("login", function(login){                    login.show(cfg);                    obj.login = login;                    $(login).bind(login.LOGINED_EVENT, function(){                        $("div.inform").show();                        location.reload();                    });                    obj.componentLoaded = true;                });            }            else                 if (obj.login && !obj.logined) {                    obj.login.show(cfg);                }        },        emailCheck: function(el){            var email = el.value;            if ((!!email) && email.length > 0 && (/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(email))) {                $.ajax({                    url: "/anonym/validate",                    data: {                        "format": "json",                        "email": email,                        "t": new Date().getTime()                    },                    global: false,                    success: function(data){                        if (data.result == "0") {                            consignee.showEmailFormatError();                        }                        if (data.result == "2") {                            consignee.showEmailExist();                        }                    }                });            }        },        showEmailFormatError: function(){            this.button.removeAttr("disabled");            this.showLoginWindow({                "user": this.form.find("input[name='email']").val(),                message: "Email帐号已存在，请输入您的密码登录"            });        },        showEmailExist: function(){            this.showLoginWindow({                "user": this.form.find("input[name='email']").val(),                message: "Email帐号已存在，请输入您的密码登录"            });            this.button.removeAttr("disabled");        }    }, delivery = {        el: $("div[step='delivery']"),        support:{            yes:"\uFF08\u652F\u6301\u8D27\u5230\u4ED8\u6B3E\uFF09",            no:"\uFF08\u4E0D\u652F\u6301\u8D27\u5230\u4ED8\u6B3E\uFF09"        },        expense:{            "3":""        },        init: function(){            var el = this.el;            el.find("input[name='delivery_btn']").click(function(){                var deliveryType = $("input[name='deliveryType']"), isSelected = false, currentEl;                deliveryType.each(function(){                    if (this.checked) {                        isSelected = true;                        currentEl = this;                        return false;                    }                });                if (isSelected) {                    delivery.id = $(currentEl).val();                    delivery.typeId = $(currentEl).attr("typeId");                    delivery.deliveryoption = el.find("select[name='deliveryoption']").val();                    delivery.view();                    delivery.next();                }                else {                    alert("TODO fix bug: Can't found delivery id");                }            });			var deliveryTypes=el.find("input[name='deliveryType']");			if(deliveryTypes.filter(":checked").length==0){				$(deliveryTypes[0]).attr("checked","checked").trigger("click");			}        },        next: function(){            if (!!this.typeId) {            	var date=new Date();                var url = "/customer/payment/checkout?deliveryTypeId=" + this.typeId + "&areaId=" + consignee.areaId;                $.get(url, "format=json" + ((!!shopId) ? "&shopId=" + shopId : "") + "&supplyTypeId=" + supplyTypeId+"&d="+date.getTime(), function(data){                    var html = "<li>" + payment.el.find("div.info_bg ul.fill_out li:first-child").html() + "</li>";                    $.each(data.payment, function(){                        if (this.id != "22") {                            html += '<li id="payment' + this.id + '"><input type="radio" name="paymentType" value="' + this.id + '"/><b class="fb">' + this.name + '</b><b class="gray">&nbsp;' + (this.description || payment.description[this.id] || "") + '</b></li>';                        }                    });                    html += "<li><ul>";                    html += payment.getOtherPayment(data);                    html += "</ul></li>";                    if(data.isFilter){                        html += '<li><b class="fb red">\u6E29\u99A8\u63D0\u793A\uFF1A</b>\u4E3A\u9002\u5E94\u4E1A\u52A1\u5FEB\u901F\u589E\u957F\u9700\u8981\uFF0C\u7269\u6D41\u7CFB\u7EDF\u6B63\u5728\u52A0\u7D27\u5347\u7EA7\uFF0C\u90E8\u5206\u5730\u533A\u539F\u5DF2\u5F00\u901A\u7684\u201C\u8D27\u5230\u4ED8\u6B3E\u201D\u529F\u80FD\u6682\u65F6\u5173\u95ED\u3002\u5728\u6B64\u671F\u95F4\uFF0C\u8BF7\u60A8\u5C3D\u53EF\u80FD\u9009\u62E9\u5176\u4ED6\u652F\u4ED8\u65B9\u5F0F\uFF0C\u7531\u6B64\u7ED9\u60A8\u5E26\u6765\u7684\u4E0D\u4FBF\u656C\u8BF7\u8C05\u89E3\uFF01</li>';                    }                    html += '<li><input name="payment_btn" type="button" class="confirm_but" value="\u786e\u8ba4\u4ed8\u6b3e\u65b9\u5f0f"></li>';                    payment.el.find("div.info_bg ul.fill_out").html(html);                    if (data.useAccount) {                        advanceAccount.isUsed = true;                    }                    payment.init();                    payment.el.removeClass("step view").addClass("new");                }, "JSON");                order.hideHightlight();            }        },        view: function(){            var selectedEl = this.el.find("#delivery" + delivery.id + "").find("span[value='" + delivery.id + "']")[0], html = $(selectedEl).text();            if (delivery.typeId == "3") {                html += "，" + $(this.el.find("label[name='selectlabel']")).text() + $(this.el.find("select[name='deliveryoption'] option:selected")).text();            }            this.el.find(".form-info p").html(html + "&nbsp; <a href='javascript:;' bind='modifyDelivery'>[\u4fee\u6539]</a>");            this.el.removeClass("new edit").addClass("view");            this.el.find("a[bind='modifyDelivery']").click(delivery.edit);        },        edit: function(e){            delivery.el.removeClass("step view").addClass("edit");            e.preventDefault();        }    }, payment = {        el: $("div[step='payment']"),        description:{            "1":"\u60A8\u9700\u8981\u5728\u6536\u8D27\u65F6\u5411\u9001\u8D27\u5458\u652F\u4ED8\u8BA2\u5355\u6B3E\u9879\u3002",            "4":"\u60A8\u9700\u8981\u5148\u53BB\u94F6\u884C\u8F6C\u5E10\uFF0C\u6240\u8D2D\u5546\u54C1\u5C06\u5728\u6B3E\u9879\u5230\u8FBE\u6587\u8F69\u7F51\u5E10\u6237\u540E\u53D1\u51FA\uFF0C\u5230\u6B3E\u65F6\u95F4\u4E00\u822C\u4E3A\u0031\u002D\u0033\u4E2A\u5DE5\u4F5C\u65E5\u3002"        },        init: function(){            var el = this.el;            el.find("input[name='payment_btn']").click(function(){                var paymentType = el.find("input[name='paymentType']:checked");                if (paymentType.length > 0) {                    payment.id = paymentType.val();                    payment.view();                    payment.next();                }                else {                    throw new Error("TODO fix bug: Can't found payment id");                }            });            el.find("input[bind='choosePresent']").click(function(e){                present.show(this);            });            el.find("input[bind='choosePresentCard']").click(function(e){                presentCard.show(this);            });            el.find("input[bind='useAdvanceAccount']").click(function(e){                advanceAccount.isUsed = !!this.checked;            });        },        view: function(){            var text = this.el.find("input[name='paymentType']:checked").parent().find("b.fb").text(), other = this.el.find("input[name='otherpayment']:checked");            if (other.length > 0) {                other.each(function(){                    if (this.value != "3") {                        text += "&nbsp;" + $(this).parent().find(".tip").text();                    }                    else {                        text += "&nbsp;\u6682\u5b58\u6b3e\uff1a" + $(this).parent().find("b.red").text();                    }                });            }            this.el.find("div.form-info p").html(text + "&nbsp;<a href='javascript:;' bind='modifyPayment'>[\u4fee\u6539]</a>");            this.el.find("a[bind='modifyPayment']").click(payment.edit);            this.el.removeClass("new").addClass("view");        },        getParam: function(){            var param = {                shopId: shopId,                supplyTypeId: supplyTypeId,                addressId: consignee.id,                townId: consignee.areaId,                deliveryInfoId: delivery.id || "",                deliveryTypeId: delivery.typeId,                deliveryOption: (delivery.deliveryoption || "3436"),                paymentId: payment.id,                useAccount: !!advanceAccount.isUsed,                usePresent: !!present.isUsed,                usePresentCard: !!presentCard.isUsed,                format: "json",                presentId: present.id || ""            }, str = $.param(param);            if (param.usePresentCard) {                $.each(presentCard.cards, function(){                    str += "&presentCardId=" + this.id;                    str += "&presentCardPass=" + this.password;                });            }            return str;        },        next: function(){            var param = this.getParam(), url = "/customer/checkout/info";            $.post(url, param, function(data){                if (data.result == "1") {                    tableList.view();                    tableList.view();                    tableList.el.find("ul.amount_info li[bind='salePrice']").html("\u5546\u54c1\u91d1\u989d\u603b\u8ba1\uff1a\uffe5" + data.checkoutInfo.salePrice.toFixed(2));                    tableList.el.find("ul.amount_info li[bind='deliveryFee']").html("<span class='freight'>\u8fd0\u8d39:\uffe5" + data.checkoutInfo.deliveryFee.toFixed(2) + "</span>");                    tableList.el.find("ul.amount_info b.amount_no").html("\uffe5" + data.checkoutInfo.needPay.toFixed(2));                    var presentMoney = (data.checkoutInfo.presentMoney != null ? data.checkoutInfo.presentMoney : 0), presentCardMoney = (data.checkoutInfo.presentCardMoney != null ? data.checkoutInfo.presentCardMoney : 0), accountMoney = (data.checkoutInfo.accountMoney != null ? data.checkoutInfo.accountMoney : 0), el = tableList.el.find("ul.amount_info li[bind='presentMoney']");                    el.html("\u793c\u5238\uff1a\uffe5" + presentMoney.toFixed(2));                    tableList.toggle(el, presentMoney);                    el = tableList.el.find("ul.amount_info li[bind='presentCardMoney']");                    el.html("\u793c\u54c1\u5361\uff1a\uffe5" + presentCardMoney.toFixed(2));                    tableList.toggle(el, presentCardMoney);                    el = tableList.el.find("ul.amount_info li[bind='accountMoney']");                    el.html("\u6682\u5b58\u6b3e\uff1a\uffe5" + accountMoney.toFixed(2));                    tableList.toggle(el, accountMoney);                    tableList.init();                    tableList.loadDefaultInvoice(data);                    tableList.loadPromotion(data);                }                else {                    throw new Error("TODO fix bug operation is failure")                }            }, "JSON");            order.hideHightlight();        },        edit: function(e){            payment.el.removeClass("step view").addClass("edit");            e.preventDefault();        },        getPresentPayment: function(){            var html = '<li><input name="otherpayment" type="checkbox" value="1"' + (present.isUsed ? ' checked="checked"' : '') + ' bind="choosePresent"> \u9009\u62e9\u793c\u5238\u652f\u4ed8</li>';            return html;        },        getPresentCardPayment: function(){            var html = '<li><input name="otherpayment" type="checkbox" value="2"' + (presentCard.isUsed ? 'checked="checked"' : '') + ' bind="choosePresentCard"> \u4f7f\u7528\u793c\u54c1\u5361</li>';            return html;        },        getAccountPayment: function(data){            var html = "";            if (data.useAccount) {                html += '<li><input name="otherpayment" type="checkbox" value="3" checked="checked" bind="useAdvanceAccount"> \u4f7f\u7528\u6682\u5b58\u6b3e\u652f\u4ed8\uff0c\u60a8\u76ee\u524d\u6682\u5b58\u6b3e\u4f59\u989d\u4e3a\uff1a<b class="red fb">\uffe5' + data.balance.toFixed(2) + '</b></li>';                advanceAccount.isUsed = true;            }            return html;        },        getOtherPayment: function(data){            var html = [];            html.push(this.getPresentPayment());            html.push(this.getPresentCardPayment());            html.push(this.getAccountPayment(data));            return html.join("");        }    }, tableList = {        el: $("div[step='goods-list']"),        promTemplate: {            "20004": "\u6ee1\uffe5{minMoney}\u7701\uffe5{amount}",            "20005": "\u6ee1\uffe5{minMoney}\u9001\uffe5{amount}\u793c\u5238",            "20006": "\u6ee1\uffe5{minMoney}\u51cf\uffe5{amount}\u8fd0\u8d39",			"20008": "购买指定活动商品满￥{minMoney}省￥{amount}"        },        payWinHtml:'<div class="widgets-window pay-window" id="payWin" style="display:none;"><div class="widgets-title"><span>请输入暂存款支付密码</span><a href="javascript:;" bind="close">X</a></div><div class="widgets-content"></div></div>',        payForm: '<div class="pay-form"><p><label for="password">支付密码:</label><input type="password" name="password" class="text"/><button>确认支付</button><a href="javascript:;" bind="forgetPass">忘记密码？</a></p><p class="error-msg"></p></div>',        init: function(){            this.form = $("form[name='order']"), this.needInvoice = $("#needInvoice");            this.type = this.needInvoice.find("input[name='type']");            this.otherInfo = this.needInvoice.find("#otherInvoiceInfo");            this.invoiceValue = this.needInvoice.find("input[name='invoiceValue']");            this.invoiceCheckbox = this.needInvoice.find("input[name='invoiceCheckbox']");            this.title = this.needInvoice.find("input[name='title']");            this.bind();        },        bind: function(){            $("#submitOrder").click(tableList.submit);            this.el.find("#askFor").click(tableList.askFor);            this.el.delegate("span.freight","mouseover",function(){                tableList.el.find("p.freightTips").show();            });            this.el.delegate("span.freight","mouseout",function(){                tableList.el.find("p.freightTips").hide();            });            this.type.click(tableList.toggleType);            this.title.focus(tableList.titleFocus).blur(tableList.titleBlur);            this.invoiceValue.focus(tableList.valueFocus).blur(tableList.valueBlur);        },        showPayWin:function(){        	$(this.payWinHtml).appendTo(document.body);        	this.payWindow=$("#payWin");        	this.overlay = $("div.widgets-overlay");            if (this.overlay.length == 0) {                $('<div class="widgets-overlay"></div>').appendTo(document.body);                this.overlay = $("div.widgets-overlay");            }            this.renderPayWin();            this.bindPay();            this.locate();        },        renderPayWin:function(){            this.content = this.payWindow.find("div.widgets-content");            this.content.html(this.payForm);        },        bindPay:function(){        	this.payWindow.find(".widgets-title a").click( function(){                tableList.closePayWin();            });            this.payWindow.find("a[bind='forgetPass']").click( function(){                (new CheckPwd({title:"修改", callback:tableList.showPayWin, obj:tableList})).show();            });            this.payWindow.find(".pay-form button").click(function(e){            	tableList.checkout();            	e.preventDefault();            	e.stopPropagation();            });            this.payWindow.find(".pay-form input").keypress(function(e){            	if(e.keyCode==13){            		tableList.checkout();            	}            	e.stopPropagation();            });        },        closePayWin:function(){        	this.overlay.hide();            this.payWindow.hide();            window.location.reload();         },        showMsg: function(msg){            var errEl = this.payWindow.find(".error-msg");            errEl.html(msg);        },        hideMsg: function(){            this.payWindow.find(".error-msg").html("");        },        locate:function(){        	this.payWindow.css({                top: $(window).height() / 2 + $(document).scrollTop() - this.payWindow.height() / 2,                display: "block"            });            this.overlay.css({                height: $(document).height(),                width: $(window).width(),                display: "block"            });        },        checkout:function(){        	var password=this.payWindow.find("input[name='password']"),form=tableList.form;        	if(!password.val()){        		tableList.showMsg("请输入支付密码！");        		return;        	}        	var param={payPassword:password.val()};        	var url="/customer/advanceaccount/validatePayPassword?format=jsonp&callback=?";        	$.post(url,param,function(data){				if(data.status=="1"){					tableList.password=password.val();                	form.find("input[name='payPassword']").val(tableList.password);                	form.submit();				}else{					tableList.showMsg((!!data.message)?data.message:"支付密码错误！");				}			}, "json");        },        valueFocus: function(){            $(this).css("color", "#000");        },        valueBlur: function(){            $(this).css("color", "#ccc");        },        toggleType: function(){            if (this.checked && this.value == "3461") {                tableList.showOtherInvoice();            }            else {                tableList.hideOtherInvoice();            }        },        showOtherInvoice: function(){            this.title.show();            if (this.otherInfo.length > 0) {                this.otherInfo.show();            }        },        hideOtherInvoice: function(){            this.title.hide();            if (this.otherInfo.length > 0) {                this.otherInfo.hide();            }        },        titleFocus: function(){            if (!this.defaultValue) {                this.defaultValue = this.value;                this.value = "";            }            else {                if (this.value == this.defaultValue) {                    this.value = "";                }            }            $(this).css("color", "#000");        },        titleBlur: function(){            if ($.trim(this.value).length == 0) {                $(this).css("color", "#ccc").val($(this).attr("defaultValue"));            }        },        askFor: function(){            var el = $(this.parentNode);            el.toggleClass("invoiceView");            value = el.attr("needValue") == "0" ? "1" : "0";            if (value == "0") {                tableList.otherInfo.hide();                tableList.invoiceCheckbox.removeAttr("checked");            }            else {                var typeValue = tableList.type.filter(":checked").val();                if (typeValue == "3461") {                    tableList.otherInfo.show();                }                tableList.invoiceCheckbox.attr("checked", "checked");            }            el.attr("needValue", value);        },        submit: function(e){            var typeValue = tableList.type.filter(":checked").val(), form = tableList.form;            form.find("input[name='shopId']").val(shopId);            form.find("input[name='addressId']").val(consignee.id);            form.find("input[name='usePresent']").val(!!present.isUsed);            form.find("input[name='usePresentCard']").val(!!presentCard.isUsed);            form.find("input[name='useAccount']").val(!!advanceAccount.isUsed);            if (tableList.needInvoice.attr("needValue") == "1") {                form.find("input[name='needInvoice']").val(1);                form.find("input[name='invoiceType']").val(typeValue);                if (typeValue == "3461") {                    var defaultValue="请填写单位名称";                    if (tableList.title.val().length > 0 && tableList.title.val() != defaultValue) {                        form.find("input[name='invoiceTitle']").val(tableList.title.val());                    }                    else {                        tableList.el.find("span.tableListMessage").hide();                        tableList.showMessage(tableList.title);                        e.preventDefault();                        return;                    }                }                if (tableList.invoiceValue.length > 0) {                    if (tableList.validate()) {                        form.find("input[name='invoiceValue']").val(tableList.invoiceValue.val());                    }                    else {                        e.preventDefault();                        return;                    }                }            }            if ($("div[step].edit").length > 0 || $("div[step].new").length > 0) {                order.hightlight();                return;            }            else {                tableList.el.find("span.tableListMessage").hide();                tableList.fillForm(form);                if(advanceAccount.isUsed){            		var url="/customer/payment/info?format=jsonp&callback=?";            		$.getJSON(url,function(data){						if(data.hasPayPassword){							tableList.showPayWin();						}else{							(new CheckPwd({title:"设置", callback:tableList.showPayWin, obj:tableList})).show();						}					});            	}else{                	form.submit();            	}                $(this).attr("disabled", "disabled");            }        },        showMessage: function(el){            var msgEl = el.parent().find("span.tableListMessage");            if (msgEl.length == 0) {                $("<br/><span class='tableListMessage' style='color:red'>" + el.attr("title") + "</span>").appendTo(el.parent());            }            else {                msgEl.html(el.attr("title")).show();            }        },        validate: function(){            var el = tableList.invoiceValue;            if (el.val().length == 0 || isNaN(el.val()) || parseFloat(el.val()) > parseFloat(el.attr("default")) || parseFloat(el.val()) < 0) {                tableList.showMessage(el);                return false;            }            el.val(parseFloat(el.val()).toFixed(2));            return true;        },        fillForm: function(form){            var html = [];            if (present.isUsed) {                html.push("<input type='hidden' name='presentId' value='" + present.id + "'/>");            }            if (presentCard.isUsed) {                $.each(presentCard.cards, function(){                    html.push("<input type='hidden' name='presentCardId' value='" + this.id + "'/>");                    html.push("<input type='hidden' name='presentCardPass' value='" + this.password + "'/>");                });            }            if (html.length > 0) {                $(html.join("")).appendTo(form);            }        },        view: function(){            this.el.removeClass("step new").addClass("view");        },        toggle: function(el, value){            if (value === 0) {                el.css("display", "none");            }            else {                el.css("display", "block");            }        },        floatSub: function(arg1, arg2){            var r1, r2, m;            try {                r1 = arg1.toString().split(".")[1].length            }             catch (e) {                r1 = 0            }            try {                r2 = arg2.toString().split(".")[1].length            }             catch (e) {                r2 = 0            }            m = Math.pow(10, Math.max(r1, r2));            return ((arg1 * m - arg2 * m) / m).toFixed(2);        },        loadDefaultInvoice: function(data){            if (this.otherInfo.length > 0 && data && data.checkoutInfo) {                var info = data.checkoutInfo, value = this.floatSub(info.salePrice, info.saveMoney);                value = this.floatSub(value, info.presentMoney);                value = this.floatSub(value, info.presentCardMoney);                this.invoiceValue.val(value);                this.form.find("input[name='invoiceValue']").val(value);            }        },        loadPromotion: function(data){            var el = this.el.find("span.promotion"), proms = data.checkoutInfo.proms, html = [];            if (proms && proms.length > 0) {                $.each(proms, function(){                    if (this.promotionPrice.saveMoney > 0) {                        var prom = tableList.promTemplate[this.promotionPrice.promType];                        prom = prom.replace(/\{minMoney\}/g, this.promotionPrice.minMoney);                        prom = prom.replace(/\{amount\}/g, this.promotionPrice.saveMoney);                        html.push(prom);                    }                });                if (html.length > 0) {                    el.html("[\u4fc3\u9500\uff1a" + html.join(";") + "]");                }                else {                    el.html("");                }            }else {                el.html("");            }        }    }, order = {        hightlight: function(){            $("#order-overlay").css({                "height": $(document.body).outerHeight(),                "width": $(document.body).outerWidth(),                "top": 0,                "left": 0            }).show();            this.scollToElement();        },        hideHightlight: function(){            $("#order-overlay").hide();        },        scollToElement: function(){            var el, edit = $("div[step].edit"), create = $("div[step].new"), offset;            if (edit.length > 0) {                el = edit.first();            }            else {                el = create.first();            }            offset = el.offset();            window.scrollTo(offset.left, offset.top - (($(window).height() - el.height()) / 2));        }    };    consignee.init();    var reg = {        name: /^[\s\S]{2,30}$/,        zipCode: /^[0-9]{1}[0-9]{5}$/,        mobile: /^1[1-9]{1}[0-9]{9}$/,        phone: /^((0\d{2,3})-)(\d{7,8})(-(\d{3,}))?$/    };    $.validator.addMethod("consigneeName", function(value, el){        return reg.name.test(value);    }, "\u6536\u8d27\u4eba\u59d3\u540d,\u75312-30\u4e2a\u5b57\u7b26\u7ec4\u6210,\u5982\uff1a\u5f20\u4e09");    $.validator.addMethod("zipCode", function(value, el){		var format=(!!($(el).attr("format")))?new RegExp($(el).attr("format")):reg.zipCode;        return format.test(value);    }, "请输入正确的邮编");    $.validator.addMethod("district", function(value, el){        return value != "-1";    }, "\u8bf7\u9009\u62e9\u6240\u5728\u5730\u533a");    $.validator.addMethod("mobile", function(value, el){        if (this.optional(el)) {            return true;        }		var format=(!!($(el).attr("format")))?new RegExp($(el).attr("format")):reg.mobile;        if (format.test(value)) {            return true;        }        return false;    }, "请按正确的格式输入手机号码");    $.validator.addMethod("phone", function(value, el){        if (this.optional(el)) {            return true;        }		var format=(!!($(el).attr("format")))?new RegExp($(el).attr("format")):reg.phone;        if (format.test(value)){            return true;        }        return false;    }, "格式不正确，号码间请使用\"-\"进行分隔");});